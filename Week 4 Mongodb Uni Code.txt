Lab 1: Comparison Operators
db.zips.find({ "pop": { "$lt": 1000 }}).count
db.zips.count({ "pop": { "$lt": 1000 }})

Lab 2: Comparison Operators
db.trips.find({ "birth year": { "$gt": 1998 }}).count()-db.trips.find({ "birth year": 1998 }).count()

Quiz 1: Logic Operators
db.inspections.find({ "result": "Out of Business","sector": "Home Improvement Contractor - 100" }).count()

Lab 1: Logic Operators
db.zips.find({ "$nor": [ { "pop": { "$lt":5000 } },{ "pop": { "$gt": 1000000 } } ] } ).count()

Lab 2: Logic Operators
db.companies.find({"$or":[{"$and":[{"founded year":2004},{"$or":[{"category_code":"web"},{"category_code":"social"}]}]},{"$and":[{"founded_month":10},{"$or":[{"category_code":"web"},{"category_code":"social"}]}]}]}).count()

Lab: $expr
db.companies.find({ "$expr": { "$eq": [ "$permalink", "$twitter_username" ] }}).count()

Lab 1: Array Operators
db.listingsAndReviews.find({ "property_type": "House","amenities": "Changing table" }).count()

Lab 2 Array Operator
db.listingsAndReviews.find({ "property_type": "House","amenities": "Changing table" }).count()

Lab: Array Operators and Projection
db.companies.find({ "offices": { "$elemMatch": { "city": "Seattle" } }}).count()

Lab 1: Querying Arrays and Sub-Documents
db.trips.find({ "start station location.coordinates.0": { "$lt": -74 }}).count()

Lab 2: Querying Arrays and Sub-Documents
db.inspections.find({ "address.city": "NEW YORK" }).count()